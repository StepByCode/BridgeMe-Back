name: CD

on:
  push:
    branches: [ "main" ]

jobs:
  deploy:
    needs: ci_test # これを追加
    runs-on: ubuntu-latest
    permissions:
      deployments: write
    environment: production
    steps:
    - uses: actions/checkout@v4
    - name: Create Deployment
      uses: actions/github-script@v6
      id: create_deployment
      with:
        script: |
          const deployment = await github.rest.repos.createDeployment({
            owner: context.repo.owner,
            repo: context.repo.repo,
            ref: context.ref,
            environment: 'production',
            description: 'Deploying from GitHub Actions',
            auto_merge: false,
            required_contexts: [],
          });
          core.setOutput('deployment_id', deployment.data.id);
    - name: Deploy to production
      run: echo "Deploying..." # Replace with actual deployment steps
    - name: Update Deployment Status (Success)
      if: success()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: ${{steps.create_deployment.outputs.deployment_id}},
            state: 'success',
            environment: 'production',
            description: 'Deployment successful',
          });
    - name: Update Deployment Status (Failure)
      if: failure()
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.repos.createDeploymentStatus({
            owner: context.repo.owner,
            repo: context.repo.repo,
            deployment_id: ${{steps.create_deployment.outputs.deployment_id}},
            state: 'failure',
            environment: 'production',
            description: 'Deployment failed',
          });